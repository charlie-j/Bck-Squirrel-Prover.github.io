<?xml version="1.0" encoding="UTF-8"?>
<!-- Kate syntax highlighting for Squirrel -->

<!DOCTYPE language SYSTEM "language.dtd"
[
<!-- Regular expression constants: -->
<!ENTITY LOWER  "a-z\300-\326\330-\337">         <!-- Lowercase Latin-1 letters. -->
<!ENTITY UPPER  "A-Z\340-\366\370-\377">         <!-- Uppercase Latin-1 letters. -->
<!ENTITY LETTER "&LOWER;&UPPER;">                <!-- All Latin-1 letters. -->
<!ENTITY LIDENT "[&LOWER;_][&LETTER;0-9_']*">    <!-- Lowercase identifiers. -->
<!ENTITY UIDENT "`?[&UPPER;][&LETTER;0-9_']*">   <!-- Uppercase identifiers. -->
<!ENTITY IDENT  "`?[&LETTER;][&LETTER;0-9_']*">  <!-- All identifiers. -->
<!ENTITY ESC    "(\\[ntbr'&quot;\\]|\\[0-9]{3}|\\x[0-9A-Fa-f]{2})"> <!-- OCaml character code escapes. -->
<!ENTITY DEC    "[0-9][0-9_]*">                                     <!-- Decimal digits with underscores. -->
]>
<language name="Squirrel"
          extensions="*.sp"
          mimetype="squirrel"
          section="manual"
          version="1"
          priority="1"
          kateversion="2.4"
          author=""
          license="LGPL" >

  <highlighting>
    <list name="Keyword">
      <item>fun</item>
      <item>const</item>
      <item>free</item>
      <item>reduc</item>
      <item>aenc</item>
       <item>axiom</item>
       <item>goal</item>
       <item>system</item>
       <item>set</item>
       <item>signature</item>
       <item>Proof</item>
       <item>Qed</item>
       <item>Abort</item>
       <item>hash</item>
       <item>senc</item>
       <item>abstract</item>
       <item>name</item>
       <item>channel</item>
       <item>mutable</item>
       <item>term</item>
       <item>equiv</item>
       <item>process</item>
       <item>with oracle</item>
    </list>

    <list name="Control-flow Keyword">
      <item>else</item>
      <item>if</item>
      <item>in</item>
      <item>out</item>
      <item>let</item>
      <item>new</item>
      <item>then</item>
      <item>try find</item>
      <item>such that</item>
    </list>

    <list name="Options">
      <item>private</item>
    </list>

    <list name="Tactics">
      <item>query</item>
      <item>trace_equiv</item>
      <item>session_equiv</item>
      <item>admit</item>
      <item>anyintro</item>
      <item>use</item>
      <item>with</item>
      <item>assert</item>
      <item>assumption</item>
      <item>auto</item>
      <item>case</item>
      <item>collision</item>
      <item>congruence</item>
      <item>constraints</item>
      <item>depends</item>
      <item>eqnames</item>
      <item>eqtraces</item>
      <item>euf</item>
      <item>executable</item>
      <item>exists</item>
      <item>existsleft</item>
      <item>expand</item>
      <item>false_left</item>
      <item>fresh</item>
      <item>forall</item>
      <item>help</item>
      <item>id</item>
      <item>induction</item>
      <item>intro</item>
      <item>intros</item>
      <item>destruct</item>
      <item>as</item>
      <item>introsleft</item>
      <item>left</item>
      <item>notleft</item>
      <item>print</item>
      <item>project</item>
      <item>right</item>
      <item>simpl</item>
      <item>simpl_left</item>
      <item>split</item>
      <item>substitute</item>
      <item>systemsubstitute</item>
      <item>true</item>
      <item>cca1</item>
      <item>ddh</item>
      <item>enckp</item>
      <item>enrich</item>
      <item>equivalent</item>
      <item>expandall</item>
      <item>fa</item>
      <item>fadup</item>
      <item>fresh</item>
      <item>ifeq</item>
      <item>noif</item>
      <item>prf</item>
      <item>refl</item>
      <item>trivialif</item>
      <item>xor</item>
      <item>yesif</item>
      <item>intctxt</item>
    </list>

    <contexts>

      <context name="Code" lineEndContext="#stay" attribute="None">

        <!-- Comments. -->
        <Detect2Chars char="(" char1="*" context="Comment"  attribute="Comment" beginRegion="comment" />
        <Detect2Chars char="/" char1="/" context="CommentSingle"  attribute="Comment" beginRegion="comment" />


        <!-- keywords and operators -->
        <keyword String="Keyword"                 context="#stay" attribute="Keyword" />
        <keyword String="Control-flow Keyword"                 context="#stay" attribute="CFKeyword" />
        <keyword String="Options"                 context="#stay" attribute="Options" />
        <keyword String="Tactics"      context="#stay" attribute="Tactics" />

        <!-- Numeric constants. -->
        <RegExpr String="&DEC;" context="#stay" attribute="Decimal" />

      </context>

      <context name="Comment" lineEndContext="#stay" attribute="Comment">
        <Detect2Chars char="*" char1=")" context="#pop" attribute="Comment" endRegion="comment"  />
        <Detect2Chars char="(" char1="*" context="Comment" attribute="Comment" beginRegion="comment" />
      </context>

      <context attribute="Comment" lineEndContext="#pop" name="CommentSingle">
        <LineContinue attribute="Comment" context="#stay"/>
      </context>

    </contexts>

    <itemDatas>
      <itemData name="Keyword"                 defStyleNum="dsKeyword"  />
      <itemData name="CFKeyword"                 defStyleNum="dsString"  />
      <itemData name="Options"                 defStyleNum="dsDecVal"  />
      <itemData name="Decimal"                 defStyleNum="dsDecVal" />
      <itemData name="Comment"                 defStyleNum="dsComment"  />
      <!-- <itemData name="Tactics"                 defStyleNum="dsError"  /> -->
      <itemData name="Tactics"                 defStyleNum="dsKeyword"  />
    </itemDatas>
  </highlighting>

  <general>
    <keywords casesensitive="true" />
  </general>
</language>
